

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Feb 25 23:54:39 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  000A                     	;# 
    25  000B                     	;# 
    26  000C                     	;# 
    27  000E                     	;# 
    28  000E                     	;# 
    29  000F                     	;# 
    30  0010                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0015                     	;# 
    34  0015                     	;# 
    35  0016                     	;# 
    36  0017                     	;# 
    37  0018                     	;# 
    38  0019                     	;# 
    39  001A                     	;# 
    40  001F                     	;# 
    41  0081                     	;# 
    42  0085                     	;# 
    43  0086                     	;# 
    44  008C                     	;# 
    45  008E                     	;# 
    46  0092                     	;# 
    47  0098                     	;# 
    48  0099                     	;# 
    49  009A                     	;# 
    50  009B                     	;# 
    51  009C                     	;# 
    52  009D                     	;# 
    53  009F                     	;# 
    54  0017                     _CCP1CONbits	set	23
    55  0015                     _CCPR1L	set	21
    56  000C                     _PIR1bits	set	12
    57  001A                     _RCREG	set	26
    58  0018                     _RCSTAbits	set	24
    59  0010                     _T1CONbits	set	16
    60  0019                     _TXREG	set	25
    61  00C4                     _CREN	set	196
    62  0065                     _RCIF	set	101
    63  00C7                     _SPEN	set	199
    64  0092                     _PR2	set	146
    65  0099                     _SPBRG	set	153
    66  0098                     _TXSTAbits	set	152
    67  04C2                     _BRGH	set	1218
    68  04C4                     _SYNC	set	1220
    69  04C1                     _TRMT	set	1217
    70  04C5                     _TXEN	set	1221
    71                           
    72                           ; #config settings
    73  0000                     
    74                           	psect	cinit
    75  07FC                     start_initialization:	
    76  07FC                     __initialization:	
    77                           
    78                           ; Clear objects allocated to BANK0
    79  07FC  01B6               	clrf	__pbssBANK0& (0+127)
    80  07FD  01B7               	clrf	(__pbssBANK0+1)& (0+127)
    81  07FE                     end_of_initialization:	
    82                           ;End of C runtime variable initialization code
    83                           
    84  07FE                     __end_of__initialization:	
    85  07FE  0183               	clrf	3
    86  07FF  2E63               	ljmp	_main	;jump to C main() function
    87                           
    88                           	psect	bssBANK0
    89  0036                     __pbssBANK0:	
    90  0036                     _donnee_recu:	
    91  0036                     	ds	2
    92                           
    93                           	psect	cstackCOMMON
    94  0070                     __pcstackCOMMON:	
    95  0070                     ?_PWM_Init:	
    96  0070                     ??_PWM_Init:	
    97                           ; 1 bytes @ 0x0
    98                           
    99  0070                     ?_PWM_Read:	
   100                           ; 1 bytes @ 0x0
   101                           
   102  0070                     ?_UART_Data_Ready:	
   103                           ; 1 bytes @ 0x0
   104                           
   105  0070                     ??_UART_Data_Ready:	
   106                           ; 1 bytes @ 0x0
   107                           
   108  0070                     ?_UART_Write:	
   109                           ; 1 bytes @ 0x0
   110                           
   111  0070                     ??_UART_Write:	
   112                           ; 1 bytes @ 0x0
   113                           
   114  0070                     ?_main:	
   115                           ; 1 bytes @ 0x0
   116                           
   117  0070                     ?_UART_Read:	
   118                           ; 1 bytes @ 0x0
   119                           
   120  0070                     ?___aldiv:	
   121                           ; 2 bytes @ 0x0
   122                           
   123  0070                     UART_Write@data:	
   124                           ; 4 bytes @ 0x0
   125                           
   126  0070                     PWM_Read@data:	
   127                           ; 1 bytes @ 0x0
   128                           
   129  0070                     ___aldiv@divisor:	
   130                           ; 2 bytes @ 0x0
   131                           
   132                           
   133                           ; 4 bytes @ 0x0
   134  0070                     	ds	2
   135  0072                     ??_PWM_Read:	
   136  0072                     ??_UART_Read:	
   137                           ; 1 bytes @ 0x2
   138                           
   139                           
   140                           ; 1 bytes @ 0x2
   141  0072                     	ds	2
   142  0074                     PWM_Read@j:	
   143  0074                     ___aldiv@dividend:	
   144                           ; 2 bytes @ 0x4
   145                           
   146                           
   147                           ; 4 bytes @ 0x4
   148  0074                     	ds	4
   149  0078                     ??___aldiv:	
   150                           
   151                           ; 1 bytes @ 0x8
   152  0078                     	ds	1
   153  0079                     UART_Init@x:	
   154                           
   155                           ; 2 bytes @ 0x9
   156  0079                     	ds	2
   157  007B                     ??_main:	
   158                           
   159                           ; 1 bytes @ 0xB
   160  007B                     	ds	2
   161                           
   162                           	psect	cstackBANK0
   163  0020                     __pcstackBANK0:	
   164  0020                     ___aldiv@counter:	
   165                           
   166                           ; 1 bytes @ 0x0
   167  0020                     	ds	1
   168  0021                     ___aldiv@sign:	
   169                           
   170                           ; 1 bytes @ 0x1
   171  0021                     	ds	1
   172  0022                     ___aldiv@quotient:	
   173                           
   174                           ; 4 bytes @ 0x2
   175  0022                     	ds	4
   176  0026                     ?_UART_Init:	
   177  0026                     UART_Init@baudrate:	
   178                           ; 1 bytes @ 0x6
   179                           
   180                           
   181                           ; 4 bytes @ 0x6
   182  0026                     	ds	4
   183  002A                     ??_UART_Init:	
   184                           
   185                           ; 1 bytes @ 0xA
   186  002A                     	ds	12
   187                           
   188                           	psect	maintext
   189  0663                     __pmaintext:	
   190 ;;
   191 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   192 ;;
   193 ;; *************** function _main *****************
   194 ;; Defined at:
   195 ;;		line 29 in file "main.c"
   196 ;; Parameters:    Size  Location     Type
   197 ;;		None
   198 ;; Auto vars:     Size  Location     Type
   199 ;;		None
   200 ;; Return value:  Size  Location     Type
   201 ;;                  1    wreg      void 
   202 ;; Registers used:
   203 ;;		wreg, status,2, status,0, pclath, cstack
   204 ;; Tracked objects:
   205 ;;		On entry : B00/0
   206 ;;		On exit  : 0/0
   207 ;;		Unchanged: 0/0
   208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   209 ;;      Params:         0       0       0       0
   210 ;;      Locals:         0       0       0       0
   211 ;;      Temps:          2       0       0       0
   212 ;;      Totals:         2       0       0       0
   213 ;;Total ram usage:        2 bytes
   214 ;; Hardware stack levels required when called:    2
   215 ;; This function calls:
   216 ;;		_PWM_Init
   217 ;;		_PWM_Read
   218 ;;		_UART_Data_Ready
   219 ;;		_UART_Init
   220 ;;		_UART_Read
   221 ;;		_UART_Write
   222 ;; This function is called by:
   223 ;;		Startup code after reset
   224 ;; This function uses a non-reentrant model
   225 ;;
   226                           
   227                           
   228                           ;psect for function _main
   229  0663                     _main:	
   230                           
   231                           ;main.c: 32: UART_Init(300);
   232                           
   233                           ;incstack = 0
   234                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   235  0663  3000               	movlw	0
   236  0664  1283               	bcf	3,5	;RP0=0, select bank0
   237  0665  1303               	bcf	3,6	;RP1=0, select bank0
   238  0666  00A9               	movwf	UART_Init@baudrate+3
   239  0667  3000               	movlw	0
   240  0668  00A8               	movwf	UART_Init@baudrate+2
   241  0669  3001               	movlw	1
   242  066A  00A7               	movwf	UART_Init@baudrate+1
   243  066B  302C               	movlw	44
   244  066C  00A6               	movwf	UART_Init@baudrate
   245  066D  271C               	fcall	_UART_Init
   246                           
   247                           ;main.c: 33: PWM_Init();
   248  066E  2630               	fcall	_PWM_Init
   249  066F                     l774:	
   250                           ;main.c: 38: while(1){
   251                           
   252                           
   253                           ;main.c: 39: if (UART_Data_Ready())
   254  066F  2614               	fcall	_UART_Data_Ready
   255  0670  3A00               	xorlw	0
   256  0671  1903               	skipnz
   257  0672  2E83               	goto	l782
   258                           
   259                           ;main.c: 40: {
   260                           ;main.c: 41: donnee_recu=UART_Read();
   261  0673  2624               	fcall	_UART_Read
   262  0674  0871               	movf	?_UART_Read+1,w
   263  0675  1283               	bcf	3,5	;RP0=0, select bank0
   264  0676  1303               	bcf	3,6	;RP1=0, select bank0
   265  0677  00B7               	movwf	_donnee_recu+1
   266  0678  0870               	movf	?_UART_Read,w
   267  0679  00B6               	movwf	_donnee_recu
   268                           
   269                           ;main.c: 42: PWM_Read(donnee_recu);
   270  067A  0837               	movf	_donnee_recu+1,w
   271  067B  00F1               	movwf	PWM_Read@data+1
   272  067C  0836               	movf	_donnee_recu,w
   273  067D  00F0               	movwf	PWM_Read@data
   274  067E  263D               	fcall	_PWM_Read
   275                           
   276                           ;main.c: 43: UART_Write(donnee_recu);
   277  067F  1283               	bcf	3,5	;RP0=0, select bank0
   278  0680  1303               	bcf	3,6	;RP1=0, select bank0
   279  0681  0836               	movf	_donnee_recu,w
   280  0682  261A               	fcall	_UART_Write
   281  0683                     l782:	
   282                           
   283                           ;main.c: 44: }
   284                           ;main.c: 45: _delay((unsigned long)((50)*(4000000/4000.0)));
   285  0683  3041               	movlw	65
   286  0684  00FC               	movwf	??_main+1
   287  0685  30EE               	movlw	238
   288  0686  00FB               	movwf	??_main
   289  0687                     u477:	
   290  0687  0BFB               	decfsz	??_main,f
   291  0688  2E87               	goto	u477
   292  0689  0BFC               	decfsz	??_main+1,f
   293  068A  2E87               	goto	u477
   294  068B  0000               	nop
   295  068C  2E6F               	goto	l774
   296  068D                     __end_of_main:	
   297                           ;main.c: 47: };
   298                           ;main.c: 49: return;
   299                           
   300                           
   301                           	psect	text1
   302  061A                     __ptext1:	
   303 ;; *************** function _UART_Write *****************
   304 ;; Defined at:
   305 ;;		line 83 in file "Uart.h"
   306 ;; Parameters:    Size  Location     Type
   307 ;;  data            1    wreg     unsigned char 
   308 ;; Auto vars:     Size  Location     Type
   309 ;;  data            1    0[COMMON] unsigned char 
   310 ;; Return value:  Size  Location     Type
   311 ;;                  1    wreg      void 
   312 ;; Registers used:
   313 ;;		wreg
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   319 ;;      Params:         0       0       0       0
   320 ;;      Locals:         1       0       0       0
   321 ;;      Temps:          0       0       0       0
   322 ;;      Totals:         1       0       0       0
   323 ;;Total ram usage:        1 bytes
   324 ;; Hardware stack levels used:    1
   325 ;; This function calls:
   326 ;;		Nothing
   327 ;; This function is called by:
   328 ;;		_main
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           
   333                           ;psect for function _UART_Write
   334  061A                     _UART_Write:	
   335                           
   336                           ;incstack = 0
   337                           ; Regs used in _UART_Write: [wreg]
   338                           ;UART_Write@data stored from wreg
   339  061A  00F0               	movwf	UART_Write@data
   340  061B                     l64:	
   341                           ;Uart.h: 85: while(!TRMT);
   342                           
   343  061B  1683               	bsf	3,5	;RP0=1, select bank1
   344  061C  1303               	bcf	3,6	;RP1=0, select bank1
   345  061D  1C98               	btfss	24,1	;volatile
   346  061E  2E1B               	goto	l64
   347                           
   348                           ;Uart.h: 86: TXREG = data;
   349  061F  0870               	movf	UART_Write@data,w
   350  0620  1283               	bcf	3,5	;RP0=0, select bank0
   351  0621  1303               	bcf	3,6	;RP1=0, select bank0
   352  0622  0099               	movwf	25	;volatile
   353  0623  0008               	return
   354  0624                     __end_of_UART_Write:	
   355                           
   356                           	psect	text2
   357  0624                     __ptext2:	
   358 ;; *************** function _UART_Read *****************
   359 ;; Defined at:
   360 ;;		line 63 in file "Uart.h"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;		None
   365 ;; Return value:  Size  Location     Type
   366 ;;                  2    0[COMMON] int 
   367 ;; Registers used:
   368 ;;		wreg
   369 ;; Tracked objects:
   370 ;;		On entry : 0/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   374 ;;      Params:         2       0       0       0
   375 ;;      Locals:         0       0       0       0
   376 ;;      Temps:          2       0       0       0
   377 ;;      Totals:         4       0       0       0
   378 ;;Total ram usage:        4 bytes
   379 ;; Hardware stack levels used:    1
   380 ;; This function calls:
   381 ;;		Nothing
   382 ;; This function is called by:
   383 ;;		_main
   384 ;;		_UART_Read_Text
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           
   389                           ;psect for function _UART_Read
   390  0624                     _UART_Read:	
   391  0624                     l50:	
   392                           ;Uart.h: 65: while(!RCIF);
   393                           
   394                           ;incstack = 0
   395                           ; Regs used in _UART_Read: [wreg]
   396                           
   397  0624  1283               	bcf	3,5	;RP0=0, select bank0
   398  0625  1303               	bcf	3,6	;RP1=0, select bank0
   399  0626  1E8C               	btfss	12,5	;volatile
   400  0627  2E24               	goto	l50
   401                           
   402                           ;Uart.h: 66: return RCREG;
   403  0628  081A               	movf	26,w	;volatile
   404  0629  00F2               	movwf	??_UART_Read
   405  062A  01F3               	clrf	??_UART_Read+1
   406  062B  0872               	movf	??_UART_Read,w
   407  062C  00F0               	movwf	?_UART_Read
   408  062D  0873               	movf	??_UART_Read+1,w
   409  062E  00F1               	movwf	?_UART_Read+1
   410  062F  0008               	return
   411  0630                     __end_of_UART_Read:	
   412                           
   413                           	psect	text3
   414  071C                     __ptext3:	
   415 ;; *************** function _UART_Init *****************
   416 ;; Defined at:
   417 ;;		line 36 in file "Uart.h"
   418 ;; Parameters:    Size  Location     Type
   419 ;;  baudrate        4    6[BANK0 ] const long 
   420 ;; Auto vars:     Size  Location     Type
   421 ;;  x               2    9[COMMON] unsigned int 
   422 ;; Return value:  Size  Location     Type
   423 ;;                  1    wreg      unsigned char 
   424 ;; Registers used:
   425 ;;		wreg, status,2, status,0, pclath, cstack
   426 ;; Tracked objects:
   427 ;;		On entry : 0/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   431 ;;      Params:         0       4       0       0
   432 ;;      Locals:         2       0       0       0
   433 ;;      Temps:          0      12       0       0
   434 ;;      Totals:         2      16       0       0
   435 ;;Total ram usage:       18 bytes
   436 ;; Hardware stack levels used:    1
   437 ;; Hardware stack levels required when called:    1
   438 ;; This function calls:
   439 ;;		___aldiv
   440 ;; This function is called by:
   441 ;;		_main
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           
   446                           ;psect for function _UART_Init
   447  071C                     _UART_Init:	
   448                           
   449                           ;Uart.h: 38: unsigned int x;
   450                           ;Uart.h: 39: x = (4000000 - baudrate*64)/(baudrate*64);
   451                           
   452                           ;incstack = 0
   453                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
   454  071C  1283               	bcf	3,5	;RP0=0, select bank0
   455  071D  1303               	bcf	3,6	;RP1=0, select bank0
   456  071E  0826               	movf	UART_Init@baudrate,w
   457  071F  00AA               	movwf	??_UART_Init
   458  0720  0827               	movf	UART_Init@baudrate+1,w
   459  0721  00AB               	movwf	??_UART_Init+1
   460  0722  0828               	movf	UART_Init@baudrate+2,w
   461  0723  00AC               	movwf	??_UART_Init+2
   462  0724  0829               	movf	UART_Init@baudrate+3,w
   463  0725  00AD               	movwf	??_UART_Init+3
   464  0726  3006               	movlw	6
   465  0727                     u345:	
   466  0727  1003               	clrc
   467  0728  0DAA               	rlf	??_UART_Init,f
   468  0729  0DAB               	rlf	??_UART_Init+1,f
   469  072A  0DAC               	rlf	??_UART_Init+2,f
   470  072B  0DAD               	rlf	??_UART_Init+3,f
   471  072C  3EFF               	addlw	-1
   472  072D  1D03               	skipz
   473  072E  2F27               	goto	u345
   474  072F  082D               	movf	??_UART_Init+3,w
   475  0730  00F3               	movwf	___aldiv@divisor+3
   476  0731  082C               	movf	??_UART_Init+2,w
   477  0732  00F2               	movwf	___aldiv@divisor+2
   478  0733  082B               	movf	??_UART_Init+1,w
   479  0734  00F1               	movwf	___aldiv@divisor+1
   480  0735  082A               	movf	??_UART_Init,w
   481  0736  00F0               	movwf	___aldiv@divisor
   482  0737  3000               	movlw	0
   483  0738  00AE               	movwf	??_UART_Init+4
   484  0739  3009               	movlw	9
   485  073A  00AF               	movwf	??_UART_Init+5
   486  073B  303D               	movlw	61
   487  073C  00B0               	movwf	??_UART_Init+6
   488  073D  3000               	movlw	0
   489  073E  00B1               	movwf	??_UART_Init+7
   490  073F  0826               	movf	UART_Init@baudrate,w
   491  0740  00B2               	movwf	??_UART_Init+8
   492  0741  0827               	movf	UART_Init@baudrate+1,w
   493  0742  00B3               	movwf	??_UART_Init+9
   494  0743  0828               	movf	UART_Init@baudrate+2,w
   495  0744  00B4               	movwf	??_UART_Init+10
   496  0745  0829               	movf	UART_Init@baudrate+3,w
   497  0746  00B5               	movwf	??_UART_Init+11
   498  0747  3006               	movlw	6
   499  0748                     u355:	
   500  0748  1003               	clrc
   501  0749  0DB2               	rlf	??_UART_Init+8,f
   502  074A  0DB3               	rlf	??_UART_Init+9,f
   503  074B  0DB4               	rlf	??_UART_Init+10,f
   504  074C  0DB5               	rlf	??_UART_Init+11,f
   505  074D  3EFF               	addlw	-1
   506  074E  1D03               	skipz
   507  074F  2F48               	goto	u355
   508  0750  09B2               	comf	??_UART_Init+8,f
   509  0751  09B3               	comf	??_UART_Init+9,f
   510  0752  09B4               	comf	??_UART_Init+10,f
   511  0753  09B5               	comf	??_UART_Init+11,f
   512  0754  0AB2               	incf	??_UART_Init+8,f
   513  0755  1903               	skipnz
   514  0756  0AB3               	incf	??_UART_Init+9,f
   515  0757  1903               	skipnz
   516  0758  0AB4               	incf	??_UART_Init+10,f
   517  0759  1903               	skipnz
   518  075A  0AB5               	incf	??_UART_Init+11,f
   519  075B  0832               	movf	??_UART_Init+8,w
   520  075C  07AE               	addwf	??_UART_Init+4,f
   521  075D  0833               	movf	??_UART_Init+9,w
   522  075E  1803               	skipnc
   523  075F  0F33               	incfsz	??_UART_Init+9,w
   524  0760  2F62               	goto	u360
   525  0761  2F63               	goto	u361
   526  0762                     u360:	
   527  0762  07AF               	addwf	??_UART_Init+5,f
   528  0763                     u361:	
   529  0763  0834               	movf	??_UART_Init+10,w
   530  0764  1803               	skipnc
   531  0765  0F34               	incfsz	??_UART_Init+10,w
   532  0766  2F68               	goto	u362
   533  0767  2F69               	goto	u363
   534  0768                     u362:	
   535  0768  07B0               	addwf	??_UART_Init+6,f
   536  0769                     u363:	
   537  0769  0835               	movf	??_UART_Init+11,w
   538  076A  1803               	skipnc
   539  076B  0A35               	incf	??_UART_Init+11,w
   540  076C  07B1               	addwf	??_UART_Init+7,f
   541  076D  0831               	movf	??_UART_Init+7,w
   542  076E  00F7               	movwf	___aldiv@dividend+3
   543  076F  0830               	movf	??_UART_Init+6,w
   544  0770  00F6               	movwf	___aldiv@dividend+2
   545  0771  082F               	movf	??_UART_Init+5,w
   546  0772  00F5               	movwf	___aldiv@dividend+1
   547  0773  082E               	movf	??_UART_Init+4,w
   548  0774  00F4               	movwf	___aldiv@dividend
   549  0775  268D               	fcall	___aldiv
   550  0776  0871               	movf	?___aldiv+1,w
   551  0777  00FA               	movwf	UART_Init@x+1
   552  0778  0870               	movf	?___aldiv,w
   553  0779  00F9               	movwf	UART_Init@x
   554                           
   555                           ;Uart.h: 40: if(x>255)
   556  077A  3001               	movlw	1
   557  077B  027A               	subwf	UART_Init@x+1,w
   558  077C  3000               	movlw	0
   559  077D  1903               	skipnz
   560  077E  0279               	subwf	UART_Init@x,w
   561  077F  1C03               	skipc
   562  0780  2FE2               	goto	l728
   563                           
   564                           ;Uart.h: 41: {
   565                           ;Uart.h: 42: x = (4000000 - baudrate*16)/(baudrate*16);
   566  0781  1283               	bcf	3,5	;RP0=0, select bank0
   567  0782  1303               	bcf	3,6	;RP1=0, select bank0
   568  0783  0826               	movf	UART_Init@baudrate,w
   569  0784  00AA               	movwf	??_UART_Init
   570  0785  0827               	movf	UART_Init@baudrate+1,w
   571  0786  00AB               	movwf	??_UART_Init+1
   572  0787  0828               	movf	UART_Init@baudrate+2,w
   573  0788  00AC               	movwf	??_UART_Init+2
   574  0789  0829               	movf	UART_Init@baudrate+3,w
   575  078A  00AD               	movwf	??_UART_Init+3
   576  078B  3004               	movlw	4
   577  078C                     u385:	
   578  078C  1003               	clrc
   579  078D  0DAA               	rlf	??_UART_Init,f
   580  078E  0DAB               	rlf	??_UART_Init+1,f
   581  078F  0DAC               	rlf	??_UART_Init+2,f
   582  0790  0DAD               	rlf	??_UART_Init+3,f
   583  0791  3EFF               	addlw	-1
   584  0792  1D03               	skipz
   585  0793  2F8C               	goto	u385
   586  0794  082D               	movf	??_UART_Init+3,w
   587  0795  00F3               	movwf	___aldiv@divisor+3
   588  0796  082C               	movf	??_UART_Init+2,w
   589  0797  00F2               	movwf	___aldiv@divisor+2
   590  0798  082B               	movf	??_UART_Init+1,w
   591  0799  00F1               	movwf	___aldiv@divisor+1
   592  079A  082A               	movf	??_UART_Init,w
   593  079B  00F0               	movwf	___aldiv@divisor
   594  079C  3000               	movlw	0
   595  079D  00AE               	movwf	??_UART_Init+4
   596  079E  3009               	movlw	9
   597  079F  00AF               	movwf	??_UART_Init+5
   598  07A0  303D               	movlw	61
   599  07A1  00B0               	movwf	??_UART_Init+6
   600  07A2  3000               	movlw	0
   601  07A3  00B1               	movwf	??_UART_Init+7
   602  07A4  0826               	movf	UART_Init@baudrate,w
   603  07A5  00B2               	movwf	??_UART_Init+8
   604  07A6  0827               	movf	UART_Init@baudrate+1,w
   605  07A7  00B3               	movwf	??_UART_Init+9
   606  07A8  0828               	movf	UART_Init@baudrate+2,w
   607  07A9  00B4               	movwf	??_UART_Init+10
   608  07AA  0829               	movf	UART_Init@baudrate+3,w
   609  07AB  00B5               	movwf	??_UART_Init+11
   610  07AC  3004               	movlw	4
   611  07AD                     u395:	
   612  07AD  1003               	clrc
   613  07AE  0DB2               	rlf	??_UART_Init+8,f
   614  07AF  0DB3               	rlf	??_UART_Init+9,f
   615  07B0  0DB4               	rlf	??_UART_Init+10,f
   616  07B1  0DB5               	rlf	??_UART_Init+11,f
   617  07B2  3EFF               	addlw	-1
   618  07B3  1D03               	skipz
   619  07B4  2FAD               	goto	u395
   620  07B5  09B2               	comf	??_UART_Init+8,f
   621  07B6  09B3               	comf	??_UART_Init+9,f
   622  07B7  09B4               	comf	??_UART_Init+10,f
   623  07B8  09B5               	comf	??_UART_Init+11,f
   624  07B9  0AB2               	incf	??_UART_Init+8,f
   625  07BA  1903               	skipnz
   626  07BB  0AB3               	incf	??_UART_Init+9,f
   627  07BC  1903               	skipnz
   628  07BD  0AB4               	incf	??_UART_Init+10,f
   629  07BE  1903               	skipnz
   630  07BF  0AB5               	incf	??_UART_Init+11,f
   631  07C0  0832               	movf	??_UART_Init+8,w
   632  07C1  07AE               	addwf	??_UART_Init+4,f
   633  07C2  0833               	movf	??_UART_Init+9,w
   634  07C3  1803               	skipnc
   635  07C4  0F33               	incfsz	??_UART_Init+9,w
   636  07C5  2FC7               	goto	u400
   637  07C6  2FC8               	goto	u401
   638  07C7                     u400:	
   639  07C7  07AF               	addwf	??_UART_Init+5,f
   640  07C8                     u401:	
   641  07C8  0834               	movf	??_UART_Init+10,w
   642  07C9  1803               	skipnc
   643  07CA  0F34               	incfsz	??_UART_Init+10,w
   644  07CB  2FCD               	goto	u402
   645  07CC  2FCE               	goto	u403
   646  07CD                     u402:	
   647  07CD  07B0               	addwf	??_UART_Init+6,f
   648  07CE                     u403:	
   649  07CE  0835               	movf	??_UART_Init+11,w
   650  07CF  1803               	skipnc
   651  07D0  0A35               	incf	??_UART_Init+11,w
   652  07D1  07B1               	addwf	??_UART_Init+7,f
   653  07D2  0831               	movf	??_UART_Init+7,w
   654  07D3  00F7               	movwf	___aldiv@dividend+3
   655  07D4  0830               	movf	??_UART_Init+6,w
   656  07D5  00F6               	movwf	___aldiv@dividend+2
   657  07D6  082F               	movf	??_UART_Init+5,w
   658  07D7  00F5               	movwf	___aldiv@dividend+1
   659  07D8  082E               	movf	??_UART_Init+4,w
   660  07D9  00F4               	movwf	___aldiv@dividend
   661  07DA  268D               	fcall	___aldiv
   662  07DB  0871               	movf	?___aldiv+1,w
   663  07DC  00FA               	movwf	UART_Init@x+1
   664  07DD  0870               	movf	?___aldiv,w
   665  07DE  00F9               	movwf	UART_Init@x
   666                           
   667                           ;Uart.h: 43: BRGH = 1;
   668  07DF  1683               	bsf	3,5	;RP0=1, select bank1
   669  07E0  1303               	bcf	3,6	;RP1=0, select bank1
   670  07E1  1518               	bsf	24,2	;volatile
   671  07E2                     l728:	
   672                           
   673                           ;Uart.h: 44: }
   674                           ;Uart.h: 45: if(x<256)
   675  07E2  3001               	movlw	1
   676  07E3  027A               	subwf	UART_Init@x+1,w
   677  07E4  3000               	movlw	0
   678  07E5  1903               	skipnz
   679  07E6  0279               	subwf	UART_Init@x,w
   680  07E7  1803               	skipnc
   681  07E8  0008               	return
   682                           
   683                           ;Uart.h: 46: {
   684                           ;Uart.h: 47: SPBRG = x;
   685  07E9  0879               	movf	UART_Init@x,w
   686  07EA  1683               	bsf	3,5	;RP0=1, select bank1
   687  07EB  1303               	bcf	3,6	;RP1=0, select bank1
   688  07EC  0099               	movwf	25	;volatile
   689                           
   690                           ;Uart.h: 48: SYNC = 0;
   691  07ED  1218               	bcf	24,4	;volatile
   692                           
   693                           ;Uart.h: 49: SPEN = 1;
   694  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   695  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   696  07F0  1798               	bsf	24,7	;volatile
   697                           
   698                           ;Uart.h: 52: RCSTAbits.RX9=0;
   699  07F1  1318               	bcf	24,6	;volatile
   700                           
   701                           ;Uart.h: 53: TXSTAbits.TX9=0;
   702  07F2  1683               	bsf	3,5	;RP0=1, select bank1
   703  07F3  1303               	bcf	3,6	;RP1=0, select bank1
   704  07F4  1318               	bcf	24,6	;volatile
   705                           
   706                           ;Uart.h: 54: CREN = 1;
   707  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   708  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   709  07F7  1618               	bsf	24,4	;volatile
   710                           
   711                           ;Uart.h: 55: TXEN = 1;
   712  07F8  1683               	bsf	3,5	;RP0=1, select bank1
   713  07F9  1303               	bcf	3,6	;RP1=0, select bank1
   714  07FA  1698               	bsf	24,5	;volatile
   715                           
   716                           ;Uart.h: 57: return 1;
   717                           ;	Return value of _UART_Init is never used
   718  07FB  0008               	return
   719  07FC                     __end_of_UART_Init:	
   720                           ;Uart.h: 58: }
   721                           ;Uart.h: 59: return 0;
   722                           ;	Return value of _UART_Init is never used
   723                           
   724                           
   725                           	psect	text4
   726  068D                     __ptext4:	
   727 ;; *************** function ___aldiv *****************
   728 ;; Defined at:
   729 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  divisor         4    0[COMMON] long 
   732 ;;  dividend        4    4[COMMON] long 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  quotient        4    2[BANK0 ] long 
   735 ;;  sign            1    1[BANK0 ] unsigned char 
   736 ;;  counter         1    0[BANK0 ] unsigned char 
   737 ;; Return value:  Size  Location     Type
   738 ;;                  4    0[COMMON] long 
   739 ;; Registers used:
   740 ;;		wreg, status,2, status,0
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   746 ;;      Params:         8       0       0       0
   747 ;;      Locals:         0       6       0       0
   748 ;;      Temps:          1       0       0       0
   749 ;;      Totals:         9       6       0       0
   750 ;;Total ram usage:       15 bytes
   751 ;; Hardware stack levels used:    1
   752 ;; This function calls:
   753 ;;		Nothing
   754 ;; This function is called by:
   755 ;;		_UART_Init
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           
   760                           ;psect for function ___aldiv
   761  068D                     ___aldiv:	
   762                           
   763                           ;incstack = 0
   764                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   765  068D  1283               	bcf	3,5	;RP0=0, select bank0
   766  068E  1303               	bcf	3,6	;RP1=0, select bank0
   767  068F  01A1               	clrf	___aldiv@sign
   768  0690  1FF3               	btfss	___aldiv@divisor+3,7
   769  0691  2E9F               	goto	l215
   770  0692  09F0               	comf	___aldiv@divisor,f
   771  0693  09F1               	comf	___aldiv@divisor+1,f
   772  0694  09F2               	comf	___aldiv@divisor+2,f
   773  0695  09F3               	comf	___aldiv@divisor+3,f
   774  0696  0AF0               	incf	___aldiv@divisor,f
   775  0697  1903               	skipnz
   776  0698  0AF1               	incf	___aldiv@divisor+1,f
   777  0699  1903               	skipnz
   778  069A  0AF2               	incf	___aldiv@divisor+2,f
   779  069B  1903               	skipnz
   780  069C  0AF3               	incf	___aldiv@divisor+3,f
   781  069D  01A1               	clrf	___aldiv@sign
   782  069E  0AA1               	incf	___aldiv@sign,f
   783  069F                     l215:	
   784  069F  1FF7               	btfss	___aldiv@dividend+3,7
   785  06A0  2EB0               	goto	l672
   786  06A1  09F4               	comf	___aldiv@dividend,f
   787  06A2  09F5               	comf	___aldiv@dividend+1,f
   788  06A3  09F6               	comf	___aldiv@dividend+2,f
   789  06A4  09F7               	comf	___aldiv@dividend+3,f
   790  06A5  0AF4               	incf	___aldiv@dividend,f
   791  06A6  1903               	skipnz
   792  06A7  0AF5               	incf	___aldiv@dividend+1,f
   793  06A8  1903               	skipnz
   794  06A9  0AF6               	incf	___aldiv@dividend+2,f
   795  06AA  1903               	skipnz
   796  06AB  0AF7               	incf	___aldiv@dividend+3,f
   797  06AC  3001               	movlw	1
   798  06AD  00F8               	movwf	??___aldiv
   799  06AE  0878               	movf	??___aldiv,w
   800  06AF  06A1               	xorwf	___aldiv@sign,f
   801  06B0                     l672:	
   802  06B0  3000               	movlw	0
   803  06B1  00A5               	movwf	___aldiv@quotient+3
   804  06B2  3000               	movlw	0
   805  06B3  00A4               	movwf	___aldiv@quotient+2
   806  06B4  3000               	movlw	0
   807  06B5  00A3               	movwf	___aldiv@quotient+1
   808  06B6  3000               	movlw	0
   809  06B7  00A2               	movwf	___aldiv@quotient
   810  06B8  0873               	movf	___aldiv@divisor+3,w
   811  06B9  0472               	iorwf	___aldiv@divisor+2,w
   812  06BA  0471               	iorwf	___aldiv@divisor+1,w
   813  06BB  0470               	iorwf	___aldiv@divisor,w
   814  06BC  1903               	skipnz
   815  06BD  2F05               	goto	l694
   816  06BE  01A0               	clrf	___aldiv@counter
   817  06BF  0AA0               	incf	___aldiv@counter,f
   818  06C0                     l680:	
   819  06C0  1BF3               	btfsc	___aldiv@divisor+3,7
   820  06C1  2ED0               	goto	l682
   821  06C2  3001               	movlw	1
   822  06C3  00F8               	movwf	??___aldiv
   823  06C4                     u275:	
   824  06C4  1003               	clrc
   825  06C5  0DF0               	rlf	___aldiv@divisor,f
   826  06C6  0DF1               	rlf	___aldiv@divisor+1,f
   827  06C7  0DF2               	rlf	___aldiv@divisor+2,f
   828  06C8  0DF3               	rlf	___aldiv@divisor+3,f
   829  06C9  0BF8               	decfsz	??___aldiv,f
   830  06CA  2EC4               	goto	u275
   831  06CB  3001               	movlw	1
   832  06CC  00F8               	movwf	??___aldiv
   833  06CD  0878               	movf	??___aldiv,w
   834  06CE  07A0               	addwf	___aldiv@counter,f
   835  06CF  2EC0               	goto	l680
   836  06D0                     l682:	
   837  06D0  3001               	movlw	1
   838  06D1  00F8               	movwf	??___aldiv
   839  06D2                     u295:	
   840  06D2  1003               	clrc
   841  06D3  0DA2               	rlf	___aldiv@quotient,f
   842  06D4  0DA3               	rlf	___aldiv@quotient+1,f
   843  06D5  0DA4               	rlf	___aldiv@quotient+2,f
   844  06D6  0DA5               	rlf	___aldiv@quotient+3,f
   845  06D7  0BF8               	decfsz	??___aldiv,f
   846  06D8  2ED2               	goto	u295
   847  06D9  0873               	movf	___aldiv@divisor+3,w
   848  06DA  0277               	subwf	___aldiv@dividend+3,w
   849  06DB  1D03               	skipz
   850  06DC  2EE7               	goto	u305
   851  06DD  0872               	movf	___aldiv@divisor+2,w
   852  06DE  0276               	subwf	___aldiv@dividend+2,w
   853  06DF  1D03               	skipz
   854  06E0  2EE7               	goto	u305
   855  06E1  0871               	movf	___aldiv@divisor+1,w
   856  06E2  0275               	subwf	___aldiv@dividend+1,w
   857  06E3  1D03               	skipz
   858  06E4  2EE7               	goto	u305
   859  06E5  0870               	movf	___aldiv@divisor,w
   860  06E6  0274               	subwf	___aldiv@dividend,w
   861  06E7                     u305:	
   862  06E7  1C03               	skipc
   863  06E8  2EF8               	goto	l690
   864  06E9  0870               	movf	___aldiv@divisor,w
   865  06EA  02F4               	subwf	___aldiv@dividend,f
   866  06EB  0871               	movf	___aldiv@divisor+1,w
   867  06EC  1C03               	skipc
   868  06ED  0F71               	incfsz	___aldiv@divisor+1,w
   869  06EE  02F5               	subwf	___aldiv@dividend+1,f
   870  06EF  0872               	movf	___aldiv@divisor+2,w
   871  06F0  1C03               	skipc
   872  06F1  0F72               	incfsz	___aldiv@divisor+2,w
   873  06F2  02F6               	subwf	___aldiv@dividend+2,f
   874  06F3  0873               	movf	___aldiv@divisor+3,w
   875  06F4  1C03               	skipc
   876  06F5  0F73               	incfsz	___aldiv@divisor+3,w
   877  06F6  02F7               	subwf	___aldiv@dividend+3,f
   878  06F7  1422               	bsf	___aldiv@quotient,0
   879  06F8                     l690:	
   880  06F8  3001               	movlw	1
   881  06F9                     u315:	
   882  06F9  1003               	clrc
   883  06FA  0CF3               	rrf	___aldiv@divisor+3,f
   884  06FB  0CF2               	rrf	___aldiv@divisor+2,f
   885  06FC  0CF1               	rrf	___aldiv@divisor+1,f
   886  06FD  0CF0               	rrf	___aldiv@divisor,f
   887  06FE  3EFF               	addlw	-1
   888  06FF  1D03               	skipz
   889  0700  2EF9               	goto	u315
   890  0701  3001               	movlw	1
   891  0702  02A0               	subwf	___aldiv@counter,f
   892  0703  1D03               	btfss	3,2
   893  0704  2ED0               	goto	l682
   894  0705                     l694:	
   895  0705  0821               	movf	___aldiv@sign,w
   896  0706  1903               	btfsc	3,2
   897  0707  2F13               	goto	l698
   898  0708  09A2               	comf	___aldiv@quotient,f
   899  0709  09A3               	comf	___aldiv@quotient+1,f
   900  070A  09A4               	comf	___aldiv@quotient+2,f
   901  070B  09A5               	comf	___aldiv@quotient+3,f
   902  070C  0AA2               	incf	___aldiv@quotient,f
   903  070D  1903               	skipnz
   904  070E  0AA3               	incf	___aldiv@quotient+1,f
   905  070F  1903               	skipnz
   906  0710  0AA4               	incf	___aldiv@quotient+2,f
   907  0711  1903               	skipnz
   908  0712  0AA5               	incf	___aldiv@quotient+3,f
   909  0713                     l698:	
   910  0713  0825               	movf	___aldiv@quotient+3,w
   911  0714  00F3               	movwf	?___aldiv+3
   912  0715  0824               	movf	___aldiv@quotient+2,w
   913  0716  00F2               	movwf	?___aldiv+2
   914  0717  0823               	movf	___aldiv@quotient+1,w
   915  0718  00F1               	movwf	?___aldiv+1
   916  0719  0822               	movf	___aldiv@quotient,w
   917  071A  00F0               	movwf	?___aldiv
   918  071B  0008               	return
   919  071C                     __end_of___aldiv:	
   920                           
   921                           	psect	text5
   922  0614                     __ptext5:	
   923 ;; *************** function _UART_Data_Ready *****************
   924 ;; Defined at:
   925 ;;		line 70 in file "Uart.h"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;		None
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      unsigned char 
   932 ;; Registers used:
   933 ;;		wreg
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   939 ;;      Params:         0       0       0       0
   940 ;;      Locals:         0       0       0       0
   941 ;;      Temps:          0       0       0       0
   942 ;;      Totals:         0       0       0       0
   943 ;;Total ram usage:        0 bytes
   944 ;; Hardware stack levels used:    1
   945 ;; This function calls:
   946 ;;		Nothing
   947 ;; This function is called by:
   948 ;;		_main
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           
   953                           ;psect for function _UART_Data_Ready
   954  0614                     _UART_Data_Ready:	
   955                           
   956                           ;Uart.h: 72: return RCIF;
   957                           
   958                           ;incstack = 0
   959                           ; Regs used in _UART_Data_Ready: [wreg]
   960  0614  3000               	movlw	0
   961  0615  1283               	bcf	3,5	;RP0=0, select bank0
   962  0616  1303               	bcf	3,6	;RP1=0, select bank0
   963  0617  1A8C               	btfsc	12,5	;volatile
   964  0618  3001               	movlw	1
   965  0619  0008               	return
   966  061A                     __end_of_UART_Data_Ready:	
   967                           
   968                           	psect	text6
   969  063D                     __ptext6:	
   970 ;; *************** function _PWM_Read *****************
   971 ;; Defined at:
   972 ;;		line 15 in file "PWM.h"
   973 ;; Parameters:    Size  Location     Type
   974 ;;  data            2    0[COMMON] int 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;  j               2    4[COMMON] int 
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1    wreg      void 
   979 ;; Registers used:
   980 ;;		wreg, status,2, status,0
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   986 ;;      Params:         2       0       0       0
   987 ;;      Locals:         2       0       0       0
   988 ;;      Temps:          2       0       0       0
   989 ;;      Totals:         6       0       0       0
   990 ;;Total ram usage:        6 bytes
   991 ;; Hardware stack levels used:    1
   992 ;; This function calls:
   993 ;;		Nothing
   994 ;; This function is called by:
   995 ;;		_main
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           
  1000                           ;psect for function _PWM_Read
  1001  063D                     _PWM_Read:	
  1002                           
  1003                           ;incstack = 0
  1004                           ; Regs used in _PWM_Read: [wreg+status,2+status,0]
  1005  063D  0871               	movf	PWM_Read@data+1,w
  1006  063E  00F5               	movwf	PWM_Read@j+1
  1007  063F  0870               	movf	PWM_Read@data,w
  1008  0640  00F4               	movwf	PWM_Read@j
  1009                           
  1010                           ;PWM.h: 18: CCP1CONbits.CCP1X= j&0x02;
  1011  0641  0874               	movf	PWM_Read@j,w
  1012  0642  3902               	andlw	2
  1013  0643  00F2               	movwf	??_PWM_Read
  1014  0644  0EF2               	swapf	??_PWM_Read,f
  1015  0645  0DF2               	rlf	??_PWM_Read,f
  1016  0646  1283               	bcf	3,5	;RP0=0, select bank0
  1017  0647  1303               	bcf	3,6	;RP1=0, select bank0
  1018  0648  0817               	movf	23,w	;volatile
  1019  0649  0672               	xorwf	??_PWM_Read,w
  1020  064A  39DF               	andlw	-33
  1021  064B  0672               	xorwf	??_PWM_Read,w
  1022  064C  0097               	movwf	23	;volatile
  1023                           
  1024                           ;PWM.h: 19: CCP1CONbits.CCP1Y= j&0x01;
  1025  064D  0874               	movf	PWM_Read@j,w
  1026  064E  3901               	andlw	1
  1027  064F  00F2               	movwf	??_PWM_Read
  1028  0650  0EF2               	swapf	??_PWM_Read,f
  1029  0651  0817               	movf	23,w	;volatile
  1030  0652  0672               	xorwf	??_PWM_Read,w
  1031  0653  39EF               	andlw	-17
  1032  0654  0672               	xorwf	??_PWM_Read,w
  1033  0655  0097               	movwf	23	;volatile
  1034                           
  1035                           ;PWM.h: 20: CCPR1L=j>>2;
  1036  0656  0875               	movf	PWM_Read@j+1,w
  1037  0657  00F3               	movwf	??_PWM_Read+1
  1038  0658  0874               	movf	PWM_Read@j,w
  1039  0659  00F2               	movwf	??_PWM_Read
  1040  065A  0D73               	rlf	??_PWM_Read+1,w
  1041  065B  0CF3               	rrf	??_PWM_Read+1,f
  1042  065C  0CF2               	rrf	??_PWM_Read,f
  1043  065D  0D73               	rlf	??_PWM_Read+1,w
  1044  065E  0CF3               	rrf	??_PWM_Read+1,f
  1045  065F  0CF2               	rrf	??_PWM_Read,f
  1046  0660  0872               	movf	??_PWM_Read,w
  1047  0661  0095               	movwf	21	;volatile
  1048  0662  0008               	return
  1049  0663                     __end_of_PWM_Read:	
  1050                           
  1051                           	psect	text7
  1052  0630                     __ptext7:	
  1053 ;; *************** function _PWM_Init *****************
  1054 ;; Defined at:
  1055 ;;		line 1 in file "PWM.h"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, status,2, status,0
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1069 ;;      Params:         0       0       0       0
  1070 ;;      Locals:         0       0       0       0
  1071 ;;      Temps:          0       0       0       0
  1072 ;;      Totals:         0       0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           
  1083                           ;psect for function _PWM_Init
  1084  0630                     _PWM_Init:	
  1085                           
  1086                           ;PWM.h: 3: PR2 = 0xFF;
  1087                           
  1088                           ;incstack = 0
  1089                           ; Regs used in _PWM_Init: [wreg+status,2+status,0]
  1090  0630  30FF               	movlw	255
  1091  0631  1683               	bsf	3,5	;RP0=1, select bank1
  1092  0632  1303               	bcf	3,6	;RP1=0, select bank1
  1093  0633  0092               	movwf	18	;volatile
  1094                           
  1095                           ;PWM.h: 4: CCP1CONbits.CCP1Y =1;
  1096  0634  1283               	bcf	3,5	;RP0=0, select bank0
  1097  0635  1303               	bcf	3,6	;RP1=0, select bank0
  1098  0636  1617               	bsf	23,4	;volatile
  1099                           
  1100                           ;PWM.h: 5: CCP1CONbits.CCP1X =1;
  1101  0637  1697               	bsf	23,5	;volatile
  1102                           
  1103                           ;PWM.h: 7: PIR1bits.TMR2IF=0;
  1104  0638  108C               	bcf	12,1	;volatile
  1105                           
  1106                           ;PWM.h: 8: T1CONbits.T1CKPS=11;
  1107  0639  3030               	movlw	48
  1108  063A  0490               	iorwf	16,f	;volatile
  1109                           
  1110                           ;PWM.h: 9: T1CONbits.TMR1ON=1;
  1111  063B  1410               	bsf	16,0	;volatile
  1112  063C  0008               	return
  1113  063D                     __end_of_PWM_Init:	
  1114  007E                     btemp	set	126	;btemp
  1115  007E                     wtemp	set	126
  1116  007E                     wtemp0	set	126
  1117  0080                     wtemp1	set	128
  1118  0082                     wtemp2	set	130
  1119  0084                     wtemp3	set	132
  1120  0086                     wtemp4	set	134
  1121  0088                     wtemp5	set	136
  1122  007F                     wtemp6	set	127
  1123  007E                     ttemp	set	126
  1124  007E                     ttemp0	set	126
  1125  0081                     ttemp1	set	129
  1126  0084                     ttemp2	set	132
  1127  0087                     ttemp3	set	135
  1128  007F                     ttemp4	set	127
  1129  007E                     ltemp	set	126
  1130  007E                     ltemp0	set	126
  1131  0082                     ltemp1	set	130
  1132  0086                     ltemp2	set	134
  1133  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     22      24
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     951
                                             11 COMMON     2     2      0
                           _PWM_Init
                           _PWM_Read
                    _UART_Data_Ready
                          _UART_Init
                          _UART_Read
                         _UART_Write
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     776
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     556
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Read                                             6     4      2     153
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_Init
   _PWM_Read
   _UART_Data_Ready
   _UART_Init
     ___aldiv
   _UART_Read
   _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     16      18       3       30.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      25       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      25      10        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Feb 25 23:54:39 2017

             __CFG_CP$OFF 0000                        l50 0624                        l64 061B  
             __CFG_LVP$ON 0000                       l215 069F                       l680 06C0  
                     l672 06B0                       l728 07E2                       l690 06F8  
                     l682 06D0                       l694 0705                       l782 0683  
                     l774 066F                       l698 0713                       u400 07C7  
                     u305 06E7                       u401 07C8                       u402 07CD  
                     u315 06F9                       u403 07CE                       _PR2 0092  
                     u360 0762                       u361 0763                       u345 0727  
                     u362 0768              __CFG_CPD$OFF 0000                       u275 06C4  
                     u363 0769                       u355 0748                       u295 06D2  
                     u385 078C                       u395 07AD                       u477 0687  
                    _BRGH 04C2                      _CREN 00C4                      _RCIF 0065  
                    _SPEN 00C7                      _TRMT 04C1                      _TXEN 04C5  
                    _SYNC 04C4                      _main 0663                      btemp 007E  
           __CFG_BOREN$ON 0000                      ltemp 007E                      start 0000  
                    ttemp 007E                      wtemp 007E             __CFG_MCLRE$ON 0000  
         __end_of___aldiv 071C                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _RCREG 001A                     _SPBRG 0099                     _TXREG 0019  
             ?_UART_Write 0070        __size_of_UART_Init 00E0        __size_of_UART_Read 000C  
        __end_of_PWM_Init 063D          __end_of_PWM_Read 0663                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
                   ttemp0 007E                     ttemp1 0081                     ttemp2 0084  
                   ttemp3 0087                     ttemp4 007F                     status 0003  
                   wtemp0 007E                     wtemp1 0080                     wtemp2 0082  
                   wtemp3 0084                     wtemp4 0086                     wtemp5 0088  
                   wtemp6 007F           __initialization 07FC              __end_of_main 068D  
                  ??_main 007B                    _CCPR1L 0015            __CFG_PWRTE$OFF 0000  
       __end_of_UART_Init 07FC         __end_of_UART_Read 0630       __size_of_UART_Write 000A  
               ??___aldiv 0078              PWM_Read@data 0070   __end_of__initialization 07FE  
          __pcstackCOMMON 0070                 ?_PWM_Init 0070                 ?_PWM_Read 0070  
              __pbssBANK0 0036  __size_of_UART_Data_Ready 0006                __pmaintext 0663  
              ??_PWM_Init 0070                ??_PWM_Read 0072              ??_UART_Write 0070  
               PWM_Read@j 0074                   ___aldiv 068D        __end_of_UART_Write 0624  
                 __ptext1 061A                   __ptext2 0624                   __ptext3 071C  
                 __ptext4 068D                   __ptext5 0614                   __ptext6 063D  
                 __ptext7 0630                 _T1CONbits 0010          ___aldiv@dividend 0074  
    end_of_initialization 07FE                 _RCSTAbits 0018          ___aldiv@quotient 0022  
       ??_UART_Data_Ready 0070                 _UART_Init 071C                 _UART_Read 0624  
          UART_Write@data 0070               _CCP1CONbits 0017                 _TXSTAbits 0098  
              ?_UART_Init 0026                ?_UART_Read 0070         __size_of_PWM_Init 000D  
       __size_of_PWM_Read 0026       start_initialization 07FC                 ___latbits 0000  
           __pcstackBANK0 0020                  ?___aldiv 0070               ??_UART_Init 002A  
             ??_UART_Read 0072                UART_Init@x 0079           ___aldiv@divisor 0070  
         ___aldiv@counter 0020           _UART_Data_Ready 0614                  _PIR1bits 000C  
       UART_Init@baudrate 0026                  _PWM_Init 0630                  _PWM_Read 063D  
             _donnee_recu 0036          __size_of___aldiv 008F   __end_of_UART_Data_Ready 061A  
           __size_of_main 002A              ___aldiv@sign 0021                _UART_Write 061A  
        ?_UART_Data_Ready 0070        __CFG_FOSC$INTOSCIO 0000  
